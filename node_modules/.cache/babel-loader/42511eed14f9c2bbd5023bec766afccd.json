{"ast":null,"code":"import _defineProperty from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jonathan/workspace/react/ironhack-todo/src/todo/ToDoItem.js\";\nimport React, { Component } from \"react\";\nimport history from \"../config/history\";\nimport \"./ToDoItemStyle.css\";\n\nvar ToDoItem =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoItem, _Component);\n\n  function ToDoItem() {\n    var _this;\n\n    _classCallCheck(this, ToDoItem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoItem).call(this));\n\n    _this.handleLogout = function (e) {\n      fetch(\"http://localhost:5000/api/logout\", {\n        method: \"POST\",\n        headers: {\n          Accept: \"application/json\",\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({})\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        console.log(\"res\", res);\n\n        if (res.message === \"Success\") {\n          console.log(\">> Logged out <<\");\n          history.push(\"/\");\n        }\n      });\n    };\n\n    _this.getTaskAsText = function () {\n      return React.createElement(\"div\", {\n        class: \"task-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, _this.props.todoItem.title), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, _this.props.todoItem.description));\n    };\n\n    _this.handleValueChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.getTaskAsEditable = function () {\n      return React.createElement(\"div\", {\n        class: \"task-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: _this.props.todoItem.title,\n        onChange: _this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        placeholder: _this.props.todoItem.description,\n        onChange: _this.handleValueChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }));\n    };\n\n    _this.getButtonAsEditAction = function () {\n      return React.createElement(\"button\", {\n        class: \"delete-button\",\n        onClick: _this.props.handleUpdateAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"edit\");\n    };\n\n    _this.getButtonAsUpdateAction = function () {\n      return React.createElement(\"button\", {\n        class: \"delete-button\",\n        onClick: _this.props.handleEditAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Update\");\n    };\n\n    _this.state = {\n      title: \"\",\n      description: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ToDoItem, [{\n    key: \"render\",\n    value: function render() {\n      console.log(\"his.props.todoItem\", this.props.todoItem);\n      var isDoneIcon = \"NOT YET\"; // if (this.props.todoItem.doneyet) {\n      //   isDoneIcon = \"done\";\n      // }\n\n      if (this.props.todoItem.edit) {\n        isDoneIcon = \"EDIT ME\";\n      }\n\n      var task;\n      var actionButton = this.getButtonAsEditAction();\n\n      if (!this.props.todoItem.edit) {\n        task = this.getTaskAsText();\n      } else {\n        task = this.getTaskAsEditable();\n        actionButton = this.getButtonAsUpdateAction();\n      }\n\n      var div = React.createElement(\"div\", {\n        class: \"todo-item\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"task-info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, isDoneIcon), React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, this.props.todoItem._id)), task, React.createElement(\"div\", {\n        class: \"task-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, actionButton, React.createElement(\"button\", {\n        class: \"delete-button\",\n        onClick: this.props.handleDeleteAction,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"delete\")));\n      return div;\n    } // render() {\n    //   // const toDoEntries = this.props.entries;\n    //   // const listItems = toDoEntries.map(this.createTasks);\n    //   const divStyle = {\n    //     display: \"flex\",\n    //     \"flex-direction\": \"column\",\n    //     width: \"20vw\",\n    //     margin: \"0 auto\"\n    //   };\n    //   return (\n    //     <div>\n    //       <ul className=\"theList\">\n    //         <li>test</li>\n    //       </ul>\n    //       <div style={divStyle}>\n    //         <button onClick={() => this.handleLogout()}>logout</button>\n    //         {/* <button onClick={() => this.handleMe()}>/TASKS</button> */}\n    //         <button onClick={() => this.handleA()}>/TASKS</button>\n    //         <button onClick={() => this.handleB()}>/TASKS/CREATE</button>\n    //         <button onClick={() => this.handleC()}>/TASKS/EDIT/:ID</button>\n    //         <button onClick={() => this.handleD()}>/TASKS/DELETE/:ID</button>\n    //       </div>\n    //     </div>\n    //   );\n    // }\n\n  }]);\n\n  return ToDoItem;\n}(Component);\n\nexport default ToDoItem;","map":{"version":3,"sources":["/home/jonathan/workspace/react/ironhack-todo/src/todo/ToDoItem.js"],"names":["React","Component","history","ToDoItem","handleLogout","e","fetch","method","headers","Accept","body","JSON","stringify","then","res","json","console","log","message","push","getTaskAsText","props","todoItem","title","description","handleValueChange","event","setState","target","name","value","getTaskAsEditable","getButtonAsEditAction","handleUpdateAction","getButtonAsUpdateAction","handleEditAction","state","isDoneIcon","edit","task","actionButton","div","_id","handleDeleteAction"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport history from \"../config/history\";\nimport \"./ToDoItemStyle.css\";\n\nclass ToDoItem extends Component {\n  constructor() {\n    super();\n    this.state = {\n      title: \"\",\n      description: \"\"\n    };\n  }\n\n  handleLogout = e => {\n    fetch(\"http://localhost:5000/api/logout\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({})\n    })\n      .then(res => res.json())\n      .then(res => {\n        console.log(\"res\", res);\n        if (res.message === \"Success\") {\n          console.log(\">> Logged out <<\");\n          history.push(\"/\");\n        }\n      });\n  };\n\n  getTaskAsText = () => {\n    return (\n      <div class=\"task-text\">\n        <span>{this.props.todoItem.title}</span>\n        <span>{this.props.todoItem.description}</span>\n      </div>\n    );\n  };\n\n  handleValueChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  getTaskAsEditable = () => {\n    return (\n      <div class=\"task-text\">\n        <input\n          type=\"text\"\n          placeholder={this.props.todoItem.title}\n          onChange={this.handleValueChange}\n        />\n        <input\n          type=\"text\"\n          placeholder={this.props.todoItem.description}\n          onChange={this.handleValueChange}\n        />\n      </div>\n    );\n  };\n\n  getButtonAsEditAction = () => {\n    return (\n      <button class=\"delete-button\" onClick={this.props.handleUpdateAction}>\n        edit\n      </button>\n    );\n  };\n\n  getButtonAsUpdateAction = () => {\n    return (\n      <button class=\"delete-button\" onClick={this.props.handleEditAction}>\n        Update\n      </button>\n    );\n  };\n\n  render() {\n    console.log(\"his.props.todoItem\", this.props.todoItem);\n\n    let isDoneIcon = \"NOT YET\";\n    // if (this.props.todoItem.doneyet) {\n    //   isDoneIcon = \"done\";\n    // }\n\n    if (this.props.todoItem.edit) {\n      isDoneIcon = \"EDIT ME\";\n    }\n\n    let task;\n    let actionButton = this.getButtonAsEditAction();\n\n    if (!this.props.todoItem.edit) {\n      task = this.getTaskAsText();\n    } else {\n      task = this.getTaskAsEditable();\n      actionButton = this.getButtonAsUpdateAction();\n    }\n\n    let div = (\n      <div class=\"todo-item\">\n        <div class=\"task-info\">\n          <span>{isDoneIcon}</span>\n          <span>{this.props.todoItem._id}</span>\n        </div>\n        {task}\n        <div class=\"task-controls\">\n          {actionButton}\n          <button class=\"delete-button\" onClick={this.props.handleDeleteAction}>\n            delete\n          </button>\n        </div>\n      </div>\n    );\n\n    return div;\n  }\n\n  // render() {\n  //   // const toDoEntries = this.props.entries;\n  //   // const listItems = toDoEntries.map(this.createTasks);\n\n  //   const divStyle = {\n  //     display: \"flex\",\n  //     \"flex-direction\": \"column\",\n  //     width: \"20vw\",\n  //     margin: \"0 auto\"\n  //   };\n\n  //   return (\n  //     <div>\n  //       <ul className=\"theList\">\n  //         <li>test</li>\n  //       </ul>\n  //       <div style={divStyle}>\n  //         <button onClick={() => this.handleLogout()}>logout</button>\n  //         {/* <button onClick={() => this.handleMe()}>/TASKS</button> */}\n  //         <button onClick={() => this.handleA()}>/TASKS</button>\n  //         <button onClick={() => this.handleB()}>/TASKS/CREATE</button>\n  //         <button onClick={() => this.handleC()}>/TASKS/EDIT/:ID</button>\n  //         <button onClick={() => this.handleD()}>/TASKS/DELETE/:ID</button>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n}\n\nexport default ToDoItem;\n"]},"metadata":{},"sourceType":"module"}