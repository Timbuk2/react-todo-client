{"ast":null,"code":"import _defineProperty from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jonathan/workspace/react/ironhack-todo/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jonathan/workspace/react/ironhack-todo/src/todo/ToDoPageComponent.js\";\nimport React, { Component } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoService from \"../rest/ToDoService\";\nimport \"./ToDoPageStyle.css\";\n\nvar ToDoPageComponent =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ToDoPageComponent, _Component);\n\n  function ToDoPageComponent() {\n    var _this;\n\n    _classCallCheck(this, ToDoPageComponent);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ToDoPageComponent).call(this));\n\n    _this.componentDidMount = function () {\n      ToDoService.getAllTasks().then(function (res) {\n        _this.setState({\n          items: res.data\n        }, function () {});\n      }).catch(function (error) {\n        alert(\"something went wrong. check your network connection\");\n      });\n    };\n\n    _this.handleValueChange = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.value));\n    };\n\n    _this.hasInput = function () {\n      return _this.state.taskTitle.length <= 0 || _this.state.taskDescription <= 0 ? false : true;\n    };\n\n    _this.handleTaskSubmit = function (event) {\n      if (!_this.hasInput()) {\n        alert(\"A task requires both a Title and Description\");\n        return;\n      }\n\n      var task = {\n        _id: null,\n        title: _this.state.taskTitle,\n        description: _this.state.taskDescription,\n        doneyet: false\n      };\n      ToDoService.createNewTask(task).then(function (res) {\n        _this.getAllTasks();\n      }).catch(function (error) {\n        alert(\"something went wrong: \" + error);\n      });\n    };\n\n    _this.handleDeleteAction = function (id) {\n      ToDoService.deleteTask(id).then(function (res) {\n        _this.getAllTasks();\n      });\n    };\n\n    _this.handleEditAction = function (id) {\n      var items = _this.state.items;\n      items.find(function (item, index) {\n        if (item._id === id) {\n          items[index].edit = true;\n\n          _this.setState({\n            items: items\n          });\n        }\n      });\n    };\n\n    _this.handleUpdateAction = function (id, title, description, doneyet) {\n      console.log(\"\\n\\n******** \");\n      console.log(\"3:  \");\n      console.log(\"handlingUpdateActionInParent  \");\n      console.log(\"doneyet\", doneyet);\n      console.log(\"sending updated data to server . . .\");\n      ToDoService.updateTask(id, title, description, doneyet).then(function (res) {\n        console.log(\"\\n******** \");\n        console.log(\"4:  \");\n        console.log(\"updated response from server is \", res); //TODO if response is ok, then update all tasks.\n\n        _this.getAllTasks();\n      });\n    };\n\n    _this.getAllTasks = function () {\n      ToDoService.getAllTasks().then(function (res) {\n        console.log(\"\\n******** \");\n        console.log(\"5:  \");\n        console.log(\"fetch list of all updated tasks \");\n        console.log(\"getAllTasks() \", res.data); // console.log(\" state BEFORE \", this.state);\n        // this.setState({ items: res.data });\n        // console.log(\" state AFTER \", this.state);\n        // console.log(\"state set\");\n        //this.resetInput();\n      }).catch(function (error) {\n        alert(\"something went wrong: \" + error);\n      });\n    };\n\n    _this.resetInput = function () {\n      // Refactor ?\n      _this.taskTitleEntry.value = \"\";\n      _this.taskInputEntry.value = \"\";\n\n      _this.setState({\n        taskTitle: \"\",\n        taskDescription: \"\"\n      });\n    };\n\n    _this.state = {\n      taskTitle: \"\",\n      taskDescription: \"\",\n      items: [{\n        _id: \"\",\n        title: \"\",\n        description: \"\",\n        doneyet: false,\n        edit: false\n      }]\n    };\n    return _this;\n  }\n\n  _createClass(ToDoPageComponent, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var tasks = [];\n      this.state.items.map(function (item) {\n        tasks.push(React.createElement(ToDoItem, {\n          todoItem: item,\n          handleEditAction: function handleEditAction() {\n            return _this2.handleEditAction(item._id);\n          },\n          handleUpdateAction: _this2.handleUpdateAction,\n          handleDeleteAction: function handleDeleteAction() {\n            return _this2.handleDeleteAction(item._id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }));\n      });\n      return React.createElement(\"div\", {\n        class: \"page-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        class: \"page-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Tasks (\", this.state.items.length, \")!\")), React.createElement(\"div\", {\n        class: \"task-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        name: \"taskTitle\",\n        class: \"task-input\",\n        placeholder: \"  + Add Title\",\n        onChange: this.handleValueChange,\n        ref: function ref(el) {\n          return _this2.taskTitleEntry = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        name: \"taskDescription\",\n        class: \"task-input\",\n        placeholder: \"  + Add Description\",\n        onChange: this.handleValueChange,\n        ref: function ref(el) {\n          return _this2.taskInputEntry = el;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.handleTaskSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Add Task\")), React.createElement(\"div\", {\n        class: \"task-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, tasks));\n    }\n  }]);\n\n  return ToDoPageComponent;\n}(Component);\n\nexport default ToDoPageComponent;","map":{"version":3,"sources":["/home/jonathan/workspace/react/ironhack-todo/src/todo/ToDoPageComponent.js"],"names":["React","Component","ToDoItem","ToDoService","ToDoPageComponent","componentDidMount","getAllTasks","then","res","setState","items","data","catch","error","alert","handleValueChange","event","target","name","value","hasInput","state","taskTitle","length","taskDescription","handleTaskSubmit","task","_id","title","description","doneyet","createNewTask","handleDeleteAction","id","deleteTask","handleEditAction","find","item","index","edit","handleUpdateAction","console","log","updateTask","resetInput","taskTitleEntry","taskInputEntry","tasks","map","push","el"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ToDoItem from \"./ToDoItem\";\nimport ToDoService from \"../rest/ToDoService\";\n\nimport \"./ToDoPageStyle.css\";\n\nclass ToDoPageComponent extends Component {\n  constructor() {\n    super();\n    this.state = {\n      taskTitle: \"\",\n      taskDescription: \"\",\n      items: [\n        { _id: \"\", title: \"\", description: \"\", doneyet: false, edit: false }\n      ]\n    };\n  }\n\n  componentDidMount = () => {\n    ToDoService.getAllTasks()\n      .then(res => {\n        this.setState({ items: res.data }, function() {});\n      })\n      .catch(error => {\n        alert(\"something went wrong. check your network connection\");\n      });\n  };\n\n  handleValueChange = event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  hasInput = () => {\n    return this.state.taskTitle.length <= 0 || this.state.taskDescription <= 0\n      ? false\n      : true;\n  };\n\n  handleTaskSubmit = event => {\n    if (!this.hasInput()) {\n      alert(\"A task requires both a Title and Description\");\n      return;\n    }\n\n    const task = {\n      _id: null,\n      title: this.state.taskTitle,\n      description: this.state.taskDescription,\n      doneyet: false\n    };\n\n    ToDoService.createNewTask(task)\n      .then(res => {\n        this.getAllTasks();\n      })\n      .catch(error => {\n        alert(\"something went wrong: \" + error);\n      });\n  };\n\n  handleDeleteAction = id => {\n    ToDoService.deleteTask(id).then(res => {\n      this.getAllTasks();\n    });\n  };\n\n  handleEditAction = id => {\n    const items = this.state.items;\n    items.find((item, index) => {\n      if (item._id === id) {\n        items[index].edit = true;\n        this.setState({ items: items });\n      }\n    });\n  };\n\n  handleUpdateAction = (id, title, description, doneyet) => {\n    console.log(\"\\n\\n******** \");\n    console.log(\"3:  \");\n    console.log(\"handlingUpdateActionInParent  \");\n    console.log(\"doneyet\", doneyet);\n    console.log(\"sending updated data to server . . .\");\n    ToDoService.updateTask(id, title, description, doneyet).then(res => {\n      console.log(\"\\n******** \");\n      console.log(\"4:  \");\n      console.log(\"updated response from server is \", res);\n      //TODO if response is ok, then update all tasks.\n      this.getAllTasks();\n    });\n  };\n\n  getAllTasks = () => {\n    ToDoService.getAllTasks()\n      .then(res => {\n        console.log(\"\\n******** \");\n        console.log(\"5:  \");\n        console.log(\"fetch list of all updated tasks \");\n        console.log(\"getAllTasks() \", res.data);\n\n        // console.log(\" state BEFORE \", this.state);\n        // this.setState({ items: res.data });\n\n        // console.log(\" state AFTER \", this.state);\n\n        // console.log(\"state set\");\n\n        //this.resetInput();\n      })\n      .catch(error => {\n        alert(\"something went wrong: \" + error);\n      });\n  };\n\n  resetInput = () => {\n    // Refactor ?\n    this.taskTitleEntry.value = \"\";\n    this.taskInputEntry.value = \"\";\n    this.setState({ taskTitle: \"\", taskDescription: \"\" });\n  };\n\n  render() {\n    const tasks = [];\n\n    this.state.items.map(item => {\n      tasks.push(\n        <ToDoItem\n          todoItem={item}\n          handleEditAction={() => this.handleEditAction(item._id)}\n          handleUpdateAction={this.handleUpdateAction}\n          handleDeleteAction={() => this.handleDeleteAction(item._id)}\n        />\n      );\n    });\n\n    return (\n      <div class=\"page-container\">\n        <div class=\"page-title\">\n          <h2>Tasks ({this.state.items.length})!</h2>\n        </div>\n        <div class=\"task-form\">\n          <input\n            name=\"taskTitle\"\n            class=\"task-input\"\n            placeholder=\"  + Add Title\"\n            onChange={this.handleValueChange}\n            ref={el => (this.taskTitleEntry = el)}\n          />\n          <input\n            name=\"taskDescription\"\n            class=\"task-input\"\n            placeholder=\"  + Add Description\"\n            onChange={this.handleValueChange}\n            ref={el => (this.taskInputEntry = el)}\n          />\n          <button onClick={this.handleTaskSubmit}>Add Task</button>\n        </div>\n        <div class=\"task-list\">{tasks}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToDoPageComponent;\n"]},"metadata":{},"sourceType":"module"}