{"ast":null,"code":"import axios from \"axios\";\nimport { promised } from \"q\";\nvar ToDoService = {\n  createNewTask: function createNewTask(task) {\n    new Promise(function (resolve, reject) {\n      axios.post(\"http://localhost:5000/api/tasks/create\", {\n        title: task.title,\n        description: task.description,\n        doneyet: task.doneyet\n      }, {\n        withCredentials: true\n      }).then(function (res) {\n        resolve(res);\n      });\n    });\n  },\n  updateTask: function updateTask() {\n    console.log(\"updating item . . . .\");\n  },\n  getAllTasks: function getAllTasks() {\n    console.log(\"SERVICE GET ALL\");\n    return new Promise(function (resolve, reject) {\n      axios.get(\"http://localhost:5000/api/tasks\", {\n        withCredentials: true\n      }).then(function (res) {\n        resolve(res); // this.setState({ items: res.data });\n      }); // .catch(error => {\n      //   alert(\"something went wrong. check your network connection\");\n      // });\n    });\n  },\n  deleteTask: function deleteTask(taskId) {\n    console.log(\"SERVICE DELETE\");\n    return new Promise(function (resolve, reject) {\n      axios.post(\"http://localhost:5000/api/tasks/delete/\" + taskId, {}, {\n        withCredentials: true\n      }).then(function (res) {\n        resolve(res.data);\n      });\n    }); // axios\n    //   .post(\n    //     \"http://localhost:5000/api/tasks/delete/\" + taskId,\n    //     {},\n    //     { withCredentials: true }\n    //   )\n    //   .then(res => {\n    //     console.log(\"a\");\n    //     //  promised.then(res);\n    //     return new Promise(function(resolve, reject) {\n    //       return { res };\n    //     });\n    // this.resetInput();\n    //   axios\n    //     .get(\"http://localhost:5000/api/tasks\", { withCredentials: true })\n    //     .then(res => {\n    //       this.setState({ items: res.data });\n    //     })\n    //     .catch(error => {\n    //       alert(\"something went wrong. check your network connection\");\n    //     });\n    // });\n  }\n};\nexport default ToDoService;","map":{"version":3,"sources":["/home/jonathan/workspace/react/ironhack-todo/src/rest/ToDoService.js"],"names":["axios","promised","ToDoService","createNewTask","task","Promise","resolve","reject","post","title","description","doneyet","withCredentials","then","res","updateTask","console","log","getAllTasks","get","deleteTask","taskId","data"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,GAAzB;AAEA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,aAAa,EAAE,uBAASC,IAAT,EAAe;AAC5B,QAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AACpCP,MAAAA,KAAK,CACFQ,IADH,CAEI,wCAFJ,EAGI;AACEC,QAAAA,KAAK,EAAEL,IAAI,CAACK,KADd;AAEEC,QAAAA,WAAW,EAAEN,IAAI,CAACM,WAFpB;AAGEC,QAAAA,OAAO,EAAEP,IAAI,CAACO;AAHhB,OAHJ,EAQI;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OARJ,EAUGC,IAVH,CAUQ,UAAAC,GAAG,EAAI;AACXR,QAAAA,OAAO,CAACQ,GAAD,CAAP;AACD,OAZH;AAaD,KAdD;AAeD,GAjBiB;AAmBlBC,EAAAA,UAAU,EAAE,sBAAW;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GArBiB;AAuBlBC,EAAAA,WAAW,EAAE,uBAAW;AACtBF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,WAAO,IAAIZ,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CP,MAAAA,KAAK,CACFmB,GADH,CACO,iCADP,EAC0C;AAAEP,QAAAA,eAAe,EAAE;AAAnB,OAD1C,EAEGC,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXR,QAAAA,OAAO,CAACQ,GAAD,CAAP,CADW,CAEX;AACD,OALH,EAD2C,CAO3C;AACA;AACA;AACD,KAVM,CAAP;AAWD,GApCiB;AAsClBM,EAAAA,UAAU,EAAE,oBAASC,MAAT,EAAiB;AAC3BL,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAO,IAAIZ,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAA0B;AAC3CP,MAAAA,KAAK,CACFQ,IADH,CAEI,4CAA4Ca,MAFhD,EAGI,EAHJ,EAII;AAAET,QAAAA,eAAe,EAAE;AAAnB,OAJJ,EAMGC,IANH,CAMQ,UAAAC,GAAG,EAAI;AACXR,QAAAA,OAAO,CAACQ,GAAG,CAACQ,IAAL,CAAP;AACD,OARH;AASD,KAVM,CAAP,CAH2B,CAe3B;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AA5EiB,CAApB;AA+EA,eAAepB,WAAf","sourcesContent":["import axios from \"axios\";\nimport { promised } from \"q\";\n\nconst ToDoService = {\n  createNewTask: function(task) {\n    new Promise(function(resolve, reject) {\n      axios\n        .post(\n          \"http://localhost:5000/api/tasks/create\",\n          {\n            title: task.title,\n            description: task.description,\n            doneyet: task.doneyet\n          },\n          { withCredentials: true }\n        )\n        .then(res => {\n          resolve(res);\n        });\n    });\n  },\n\n  updateTask: function() {\n    console.log(\"updating item . . . .\");\n  },\n\n  getAllTasks: function() {\n    console.log(\"SERVICE GET ALL\");\n    return new Promise(function(resolve, reject) {\n      axios\n        .get(\"http://localhost:5000/api/tasks\", { withCredentials: true })\n        .then(res => {\n          resolve(res);\n          // this.setState({ items: res.data });\n        });\n      // .catch(error => {\n      //   alert(\"something went wrong. check your network connection\");\n      // });\n    });\n  },\n\n  deleteTask: function(taskId) {\n    console.log(\"SERVICE DELETE\");\n\n    return new Promise(function(resolve, reject) {\n      axios\n        .post(\n          \"http://localhost:5000/api/tasks/delete/\" + taskId,\n          {},\n          { withCredentials: true }\n        )\n        .then(res => {\n          resolve(res.data);\n        });\n    });\n\n    // axios\n    //   .post(\n    //     \"http://localhost:5000/api/tasks/delete/\" + taskId,\n    //     {},\n    //     { withCredentials: true }\n    //   )\n\n    //   .then(res => {\n    //     console.log(\"a\");\n    //     //  promised.then(res);\n    //     return new Promise(function(resolve, reject) {\n    //       return { res };\n    //     });\n    // this.resetInput();\n    //   axios\n    //     .get(\"http://localhost:5000/api/tasks\", { withCredentials: true })\n    //     .then(res => {\n    //       this.setState({ items: res.data });\n    //     })\n    //     .catch(error => {\n    //       alert(\"something went wrong. check your network connection\");\n    //     });\n    // });\n  }\n};\n\nexport default ToDoService;\n"]},"metadata":{},"sourceType":"module"}